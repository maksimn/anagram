==== 26 сентября 2016 ==========================================================

Нужен класс, который будет считывать слова из файла последовательно, и в конце
чтения возвращает null.

class WordReader {
    public String NextWord();
}

Настоящая реализация этого файла работает с файловой системой, поэтому для
тестируемости нужно выделить интерфейс

interface IWordReader {
    String NextWord();
}

Для начала также сделать рукописную заглушку (Stub) для IWordReader, потом
сделай через Moq.

--------------------------------------------------------------------------------

Класс: AnagramClasses 
Назначение: хранение структуры данных со всеми группами анаграмм.
Структура данных - словарь, в котором ключ - строка, идентифицирующая группу
анаграмм, а значение - список строк - слова из данной группы анаграмм.

--------------------------------------------------------------------------------

Класс: AnagramIO
Назначение: инициализация AnagramClasses из потоков ввода и вывод в потоки 
вывода.

--------------------------------------------------------------------------------

==== 27 сентября 2016 ==========================================================

Текущая задача - избавиться от классов-фейков и перейти на Moq. [сделано]

--------------------------------------------------------------------------------

Сделать ввод-вывод из и в стандартный и файловый потоки [сделано]

--------------------------------------------------------------------------------

==== 28 сентября 2016 ==========================================================

Простая версия программы (в одном потоке без органичений по памяти и с ограни-
чением по размеру входного файла) сделана.

Далее стоит задача сделать многопоточную, не потребляющую больше 1 ГБ памяти и 
способную работать с очень большими файлами программу.

--------------------------------------------------------------------------------

Текущая задача - установить, при каких размерах входных данных программа 
перестает работать. 

Добавить код, профилирующий время работы главной части программы.
